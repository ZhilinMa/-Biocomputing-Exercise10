Alex
cd Desktop
xx <- c(1.7,"a")
str(xx)
class(xx)
xx <- c(TRUE, 2)
class(xx)
str(xx)
xx <- c("a", TRUE)
str(xx)
read.csv()
vector(1-8)
vec1=c(1-8)
vec1=c(1:8)
vec1=c(1:8,12,14,16)
df1=data.frame(names:c("Hugh","alex","Liv"),color:c("navy","blue","purple"),number:c(69,13,420))
numbers=c(3,10,4,12,55)
for(i in letters){}
for(i in letters){sum(i)}
for(i in numbers){sum(i)}
for(i in numbers){addition <- i}
5addition <- charactr(length=5)
5addition <- character(length=5)
fiveaddition <- character(length=5)
for(i in numbers){fiveaddition <- i}
fiveaddition
vec <- 1:10
for (i in vec){ cubes <- cubed(i)}
for (i in vec)
for (i in vec){}
for (i in vec){
print(i^3)
}
vec <- 1:10
for (i in vec){
cubes<-i^3
vec <- 1:10
for (i in vec){
vec <- 1:10
cubes<-numeric(length(vec))
for (i in vec){
cubes[i]<-i^3
print(i^3)
}
cubes
myVector <- (5,4)
myVector == (5,4)
myVector <- c(5,4)
myMean(myVector)
myMean(x=myVector)
myMean(x=myVector)
myMean<-function(X){
n=lenght(x)
total=sum(x)
average=total/n
return(average)
}
myMean(x=myVector)
myMean(myVector)
myMean<-function(X){
n=length(x)
total=sum(x)
average=total/n
return(average)
}
myMean(myVector)
myMean(x=myVector)
myMean(x==myVector)
halfMin <- function(x){}
halfMin <- function(x){
least <- min(x)
return(least/2)
}
halfMin(1:10)
myMean(1:10)
divideMin <- function(x, div=2){
least <- min(x)
return(least/div)
}
divideMin(1:10)
divideMin(1:10,4)
myVector=1,5
myVector=(1,5)
myVector=c(1,5)
myVector=c(2,5)
divideMin(myVector)
teacherGrade <- function(x)
setwd("C:/Users/15135/Desktop/Exercise10/-Biocomputing-Exercise10")
list.files()
read.csv("UWvMSU_1-22-13.txt")
Scores <- read.csv("UWvMSU_1-22-13.txt")
df <- data.frame(matrix(ncol=3), nrow= 0))
df <- data.frame(matrix(ncol=3, nrow= 0))
colnames(df) <- c('time', 'UW_Score', 'MSU_Score')
df
#Create data frame to input the scores into
df <- data.frame(matrix(ncol=3, nrow= 0))
colnames(df) <- c('time', 'UW_Score', 'MSU_Score')
#Inputs scores into the data frame
for (i in 1:nrow(Scores)){
if (Scores$team[i] == "UW"){
UW_Score = UW_Score + Scores$score[i]
} else{
MSU_Score = MSU_Score + Scores$score[i]
}
time = Scores$time[i]
df[nrow(df) + 1,] <- c(time, UW_Score, MSU-Score)
}
#create "Scores" to read the text file
Scores <- read.csv("UWvMSU_1-22-13.txt")
#Create data frame to input the scores into
df <- data.frame(matrix(ncol=3, nrow= 0))
colnames(df) <- c('time', 'UW_Score', 'MSU_Score')
#Inputs scores into the data frame
for (i in 1:nrow(Scores)){
if (Scores$team[i] == 'UW'){
UW_Score = UW_Score + Scores$score[i]
} else{
MSU_Score = MSU_Score + Scores$score[i]
}
time = Scores$time[i]
df[nrow(df) + 1,] <- c(time, UW_Score, MSU-Score)
}
Scores <- read.csv("UWvMSU_1-22-13.txt")
#Create data frame to input the scores into
df <- data.frame(matrix(ncol=3, nrow= 0))
colnames(df) <- c('time', 'UW_Score', 'MSU_Score')
#Plug in scores
UW_Score = 0
MSU_Score = 0
#Inputs scores into the data frame
for (i in 1:nrow(Scores)){
if (Scores$team[i] == 'UW'){
UW_Score = UW_Score + Scores$score[i]
} else{
MSU_Score = MSU_Score + Scores$score[i]
}
time = Scores$time[i]
df[nrow(df) + 1,] <- c(time, UW_Score, MSU-Score)
}
Scores <- read.table("UWvMSU_1-22-13.txt")
#Create data frame to input the scores into
df <- data.frame(matrix(ncol=3, nrow= 0))
colnames(df) <- c('time', 'UW_Score', 'MSU_Score')
#Plug in scores
UW_Score = 0
MSU_Score = 0
#Inputs scores into the data frame
for (i in 1:nrow(Scores)){
if (Scores$team[i] == 'UW'){
UW_Score = UW_Score + Scores$score[i]
} else{
MSU_Score = MSU_Score + Scores$score[i]
}
time = Scores$time[i]
df[nrow(df) + 1,] <- c(time, UW_Score, MSU-Score)
}
View(Scores)
View(df)
Scores <- read.table("UWvMSU_1-22-13.txt", header = TRUE)
#Create data frame to input the scores into
df <- data.frame(matrix(ncol=3, nrow= 0))
colnames(df) <- c('time', 'UW_Score', 'MSU_Score')
#Plug in scores
UW_Score = 0
MSU_Score = 0
#Inputs scores into the data frame
for (i in 1:nrow(Scores)){
if (Scores$team[i] == 'UW'){
UW_Score = UW_Score + Scores$score[i]
} else{
MSU_Score = MSU_Score + Scores$score[i]
}
time = Scores$time[i]
df[nrow(df) + 1,] <- c(time, UW_Score, MSU-Score)
}
#1
#create "Scores" to read the text file
Scores <- read.table("UWvMSU_1-22-13.txt", header = TRUE)
#Create data frame to input the scores into
df <- data.frame(matrix(ncol=3, nrow= 0))
colnames(df) <- c('time', 'UW_Score', 'MSU_Score')
#Plug in scores
UW_Score = 0
MSU_Score = 0
#Inputs scores into the data frame
for (i in 1:nrow(Scores)){
if (Scores$team[i] == 'UW'){
UW_Score = UW_Score + Scores$score[i]
} else{
MSU_Score = MSU_Score + Scores$score[i]
}
time = Scores$time[i]
df[nrow(df) + 1,] <- c(time, UW_Score, MSU_Score)
}
#Plot the scores
ggplot() +
geom_line(data =df, aes(x=time, y=UW_Score), color="red") +
geom_line(data= df, aes(x=time, y=MSU_Score), color="gree") +
theme_classic
#1
#create "Scores" to read the text file
Scores <- read.table("UWvMSU_1-22-13.txt", header = TRUE)
#Create data frame to input the scores into
df <- data.frame(matrix(ncol=3, nrow= 0))
colnames(df) <- c('time', 'UW_Score', 'MSU_Score')
#Plug in scores
UW_Score = 0
MSU_Score = 0
#Inputs scores into the data frame
for (i in 1:nrow(Scores)){
if (Scores$team[i] == 'UW'){
UW_Score = UW_Score + Scores$score[i]
} else{
MSU_Score = MSU_Score + Scores$score[i]
}
time = Scores$time[i]
df[nrow(df) + 1,] <- c(time, UW_Score, MSU_Score)
}
#Plot the scores
ggplot() +
geom_line(data =df, aes(x=time, y=UW_Score), color="red") +
geom_line(data= df, aes(x=time, y=MSU_Score), color="gree") +
theme_classic
Scores <- read.table("UWvMSU_1-22-13.txt", header = TRUE)
#Create data frame to input the scores into
df <- data.frame(matrix(ncol=3, nrow= 0))
colnames(df) <- c('time', 'UW_Score', 'MSU_Score')
#Plug in scores
UW_Score = 0
MSU_Score = 0
#Inputs scores into the data frame
for (i in 1:nrow(Scores)){
if (Scores$team[i] == 'UW'){
UW_Score = UW_Score + Scores$score[i]
} else{
MSU_Score = MSU_Score + Scores$score[i]
}
time = Scores$time[i]
df[nrow(df) + 1,] <- c(time, UW_Score, MSU_Score)
}
#Plot the scores
library(ggplot2)
ggplot2() +
geom_line(data =df, aes(x=time, y=UW_Score), color="red") +
geom_line(data= df, aes(x=time, y=MSU_Score), color="gree") +
theme_classic
Scores <- read.table("UWvMSU_1-22-13.txt", header = TRUE)
#Create data frame to input the scores into
df <- data.frame(matrix(ncol=3, nrow= 0))
colnames(df) <- c('time', 'UW_Score', 'MSU_Score')
#Plug in scores
UW_Score = 0
MSU_Score = 0
#Inputs scores into the data frame
for (i in 1:nrow(Scores)){
if (Scores$team[i] == 'UW'){
UW_Score = UW_Score + Scores$score[i]
} else{
MSU_Score = MSU_Score + Scores$score[i]
}
time = Scores$time[i]
df[nrow(df) + 1,] <- c(time, UW_Score, MSU_Score)
}
#Plot the scores
library(ggplot2)
ggplot() +
geom_line(data =df, aes(x=time, y=UW_Score), color="red") +
geom_line(data= df, aes(x=time, y=MSU_Score), color="gree") +
theme_classic
Scores <- read.table("UWvMSU_1-22-13.txt", header = TRUE)
#Create data frame to input the scores into
df <- data.frame(matrix(ncol=3, nrow= 0))
colnames(df) <- c('time', 'UW_Score', 'MSU_Score')
#Plug in scores
UW_Score = 0
MSU_Score = 0
#Inputs scores into the data frame
for (i in 1:nrow(Scores)){
if (Scores$team[i] == 'UW'){
UW_Score = UW_Score + Scores$score[i]
} else{
MSU_Score = MSU_Score + Scores$score[i]
}
time = Scores$time[i]
df[nrow(df) + 1,] <- c(time, UW_Score, MSU_Score)
}
#Plot the scores
library(ggplot2)
ggplot() +
geom_line(data =df, aes(x=time, y=UW_Score), color="red") +
geom_line(data= df, aes(x=time, y=MSU_Score), color="gree") +
theme_classic()
Scores <- read.table("UWvMSU_1-22-13.txt", header = TRUE)
#Create data frame to input the scores into
df <- data.frame(matrix(ncol=3, nrow= 0))
colnames(df) <- c('time', 'UW_Score', 'MSU_Score')
#Plug in scores
UW_Score = 0
MSU_Score = 0
#Inputs scores into the data frame
for (i in 1:nrow(Scores)){
if (Scores$team[i] == 'UW'){
UW_Score = UW_Score + Scores$score[i]
} else{
MSU_Score = MSU_Score + Scores$score[i]
}
time = Scores$time[i]
df[nrow(df) + 1,] <- c(time, UW_Score, MSU_Score)
}
#Plot the scores
library(ggplot2)
ggplot() +
geom_line(data =df, aes(x=time, y=UW_Score), color="red") +
geom_line(data= df, aes(x=time, y=MSU_Score), color="green") +
theme_classic()
Scores <- read.table("UWvMSU_1-22-13.txt", header = TRUE)
#Create data frame to input the scores into
df <- data.frame(matrix(ncol=3, nrow= 0))
colnames(df) <- c('time', 'UW_Score', 'MSU_Score')
#Plug in scores
UW_Score = 0
MSU_Score = 0
#Inputs scores into the data frame
for (i in 1:nrow(Scores)){
if (Scores$team[i] == 'UW'){
UW_Score = UW_Score + Scores$score[i]
} else{
MSU_Score = MSU_Score + Scores$score[i]
}
time = Scores$time[i]
df[nrow(df) + 1,] <- c(time, UW_Score, MSU_Score)
}
#Plot the scores
library(ggplot2)
ggplot() +
geom_line(data =df, aes(x=time, y=UW_Score), color="red") +
geom_line(data= df, aes(x=time, y=MSU_Score), color="green") +
theme_classic() +
ylab(Game Score)
#create "Scores" to read the text file
Scores <- read.table("UWvMSU_1-22-13.txt", header = TRUE)
#Create data frame to input the scores into
df <- data.frame(matrix(ncol=3, nrow= 0))
colnames(df) <- c('time', 'UW_Score', 'MSU_Score')
#Plug in scores
UW_Score = 0
MSU_Score = 0
#Inputs scores into the data frame
for (i in 1:nrow(Scores)){
if (Scores$team[i] == 'UW'){
UW_Score = UW_Score + Scores$score[i]
} else{
MSU_Score = MSU_Score + Scores$score[i]
}
time = Scores$time[i]
df[nrow(df) + 1,] <- c(time, UW_Score, MSU_Score)
}
#Plot the scores
library(ggplot2)
ggplot() +
geom_line(data =df, aes(x=time, y=UW_Score), color="red") +
geom_line(data= df, aes(x=time, y=MSU_Score), color="green") +
theme_classic() +
ylab("Game Score")
#Set working directory
setwd("C:/Users/15135/Desktop/Exercise10/-Biocomputing-Exercise10")
#1
#create "Scores" to read the text file
Scores <- read.table("UWvMSU_1-22-13.txt", header = TRUE)
#Create data frame to input the scores into
df <- data.frame(matrix(ncol=3, nrow= 0))
colnames(df) <- c('time', 'UW_Score', 'MSU_Score')
#Plug in scores
UW_Score = 0
MSU_Score = 0
#Inputs scores into the data frame
for (i in 1:nrow(Scores)){
if (Scores$team[i] == 'UW'){
UW_Score = UW_Score + Scores$score[i]
} else{
MSU_Score = MSU_Score + Scores$score[i]
}
time = Scores$time[i]
df[nrow(df) + 1,] <- c(time, UW_Score, MSU_Score)
}
#Plot the scores
library(ggplot2)
ggplot() +
geom_line(data =df, aes(x=time, y=UW_Score), color="red") +
geom_line(data= df, aes(x=time, y=MSU_Score), color="green") +
theme_classic() +
ylab("Game Score") +
xlab("Time")
random_number = samp.int(1,100)
random_number = samp.int(100,1)
random_number = sample.int(1,100)
#Question 2
random_number = sample.int(100,1)
print ("I'm thinking of a number 1-100...")
for (i in 1:10) {
print("Guess a number!")
guess = readline();
guess = as.integer();
if (guess == random_num){
print("Correct")
break
}else if (guess > random_number){
print("Lower")
}else if (guess < random_number){
print("Higher")
}
}
45
random_number
random_number
#Question 2 - Guess my Number
random_number = sample.int(100,1)
print ("I'm thinking of a number 1-100...")
for (i in 1:10) {
print("Guess a number!")
guess = readline();
guess = as.integer();
if (guess == random_num){
print("Correct")
break
}else if (guess > random_number){
print("Lower")
}else if (guess < random_number){
print("Higher")
}
}
random_number = sample.int(100,1)
print ("I'm thinking of a number 1-100...")
for (i in 1:10) {
print("Guess a number!")
guess = readline();
guess = as.integer();
if (guess == random_num){
print("Correct")
break
}else if (guess > random_number){
print("Lower")
}else if (guess < random_number){
print("Higher")
}
}
random_number = sample.int(100,1)
print ("I'm thinking of a number 1-100...")
for (i in 1:10) {
print("Guess a number!")
guess = readline();
guess = as.integer();
if (guess == random_number){
print("Correct")
break
}else if (guess > random_number){
print("Lower")
}else if (guess < random_number){
print("Higher")
}
}
random_number = sample.int(100,1)
print ("I'm thinking of a number 1-100...")
for (i in 1:10) {
print("Guess a number!")
guess = readline();
guess = as.integer(guess);
if (guess == random_number){
print("Correct")
break
}else if (guess > random_number){
print("Lower")
}else if (guess < random_number){
print("Higher")
}
}
random_number = sample.int(100,1)
print ("I'm thinking of a number 1-100...")
print("Guess a number!")
for (i in 1:10) {
guess = readline();
guess = as.integer(guess);
if (guess == random_number){
print("Correct")
break
}else if (guess > random_number){
print("Lower")
}else if (guess < random_number){
print("Higher")
}
}
setwd("C:/Users/15135/Desktop/Exercise10")
setwd("C:/Users/15135/Desktop/Exercise10/-Biocomputing-Exercise10")
